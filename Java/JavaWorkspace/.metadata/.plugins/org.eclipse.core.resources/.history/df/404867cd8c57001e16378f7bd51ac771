package com.fidelity.integration;

import static org.junit.jupiter.api.Assertions.*;

import java.sql.Connection;
import java.util.List;

import org.junit.jupiter.api.AfterEach;
import org.junit.jupiter.api.BeforeEach;
import org.junit.jupiter.api.Test;
import org.springframework.jdbc.core.JdbcTemplate;

import com.fidelity.model.Trade;
import com.fidelity.model.Direction;
import com.fidelity.model.Order;

class DaoImplTest {
	
	private JdbcTemplate jdbcTemplate;
	private DbTestUtils dbTestUtils;
	private DaoImpl dao;
	private SimpleDataSource dataSource;
	private Connection connection;
	private TransactionManager transactionManager;

	@BeforeEach
	void setUp() throws Exception {
		dataSource = new SimpleDataSource();
		connection = dataSource.getConnection();
		dao = new DaoImpl(dataSource);
		transactionManager = new TransactionManager(dataSource);
		transactionManager.startTransaction(); 
		dbTestUtils = new DbTestUtils(connection);		
		jdbcTemplate = dbTestUtils.initJdbcTemplate();
	}

	@AfterEach
	void tearDown() throws Exception {
		transactionManager.rollbackTransaction();
		dataSource.shutdown();
	}
	
	@Test
    public void testCreateOrder() {
        Order order = new Order("N123456", 10, 105.00, Direction.BUY, "100", "01006");
        dao.createOrder(order);
    }

//    @Test
//    public void testCreateTrade() {
//        Order order = new Order("N123456", 10, 105.00, Direction.BUY, "100", "01006");
//        String orderId = dao.createOrder(order);
//        Trade trade = new Trade();
//        dao.createTrade(orderId, trade);
//    }

	@Test
    public void testGetTradeHistory() {
        List<Trade> tradeList = dao.getTradeHistory("100");
        assertNotNull(tradeList);
        assertTrue(tradeList.size() > 0);
    }

    @Test
    public void testGetPortfolio() {
        List<Trade> portfolio = dao.getPortfolio("100");
        assertNotNull(portfolio);
        assertTrue(portfolio.size() == 0);
    }

}
