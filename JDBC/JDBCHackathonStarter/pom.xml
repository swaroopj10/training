<project xmlns="http://maven.apache.org/POM/4.0.0"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<groupId>com.fidelity</groupId>
	<artifactId>JDBCHackathonStarter</artifactId>
	<version>1.0.0</version>
	<packaging>jar</packaging>

	<name>JDBCHackathonStarter</name>

	<properties>
		<java.version>17</java.version>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>

		<junit.jupiter.version>5.8.2</junit.jupiter.version>
		<oracle.ojdbc.version>21.5.0.0</oracle.ojdbc.version>
		<spring-jdbc.version>5.3.19</spring-jdbc.version>
		<spring-test.version>5.3.19</spring-test.version>
		<maven-compiler-plugin.version>3.10.1</maven-compiler-plugin.version>
		<maven-surefire-plugin.version>2.22.2</maven-surefire-plugin.version>
		<maven-javadoc-plugin.version>3.4.0</maven-javadoc-plugin.version>
	</properties>

	<!-- This section lets us add Bill Of Materials (bom) style poms. These define
		all version dependencies within a suite (in the case of JUnit, for example,
		keeping the Jupiter version in line with the Platform version.
		Note that in the dependencies section that follows (not the one in dependency
		management), there are no versions specified for JUnit components. -->
	<dependencyManagement>
		<dependencies>
			<dependency>
				<groupId>org.junit</groupId>
				<artifactId>junit-bom</artifactId>
				<version>${junit.jupiter.version}</version>
				<type>pom</type>
				<scope>import</scope>
			</dependency>
		</dependencies>
	</dependencyManagement>

	<dependencies>
		<dependency>
			<groupId>org.junit.jupiter</groupId>
			<artifactId>junit-jupiter-engine</artifactId>
			<scope>test</scope>
		</dependency>
		<!-- This dependency is only required to make JUnit work in Eclipse -->
		<dependency>
			<groupId>org.junit.platform</groupId>
			<artifactId>junit-platform-launcher</artifactId>
			<scope>test</scope>
		</dependency>

		<dependency>
			<groupId>com.oracle.database.jdbc</groupId>
			<artifactId>ojdbc11</artifactId>
			<version>${oracle.ojdbc.version}</version>
		</dependency>

		<!-- Use Spring JdbcTemplate for database integration tests -->
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-jdbc</artifactId>
			<version>${spring-jdbc.version}</version>
			<scope>test</scope>
		</dependency>

		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-test</artifactId>
			<version>${spring-test.version}</version>
			<scope>test</scope>
		</dependency>

		<!-- Logback for logging -->
		<!-- Includes slf4j-api -->
		<dependency>
		  <groupId>ch.qos.logback</groupId>
		  <artifactId>logback-classic</artifactId>
		  <version>1.4.7</version>
		</dependency>

	</dependencies>

	<build>
		<finalName>JDBCHackathonStarter</finalName>
		<plugins>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
				<version>${maven-compiler-plugin.version}</version>
				<configuration>
					<release>${java.version}</release>
				</configuration>
			</plugin>
			
			<plugin>
				<artifactId>maven-surefire-plugin</artifactId>
				<version>${maven-surefire-plugin.version}</version>
			</plugin>
			
			<!-- Generate Javadoc for this project with the following command (ignore the errors and warnings):
			        mvn javadoc:javadoc
			     Then open target/site/apidocs/index.html -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-javadoc-plugin</artifactId>
				<version>${maven-javadoc-plugin.version}</version>
			</plugin>
		</plugins>

	</build>
</project>
